{"version":3,"file":"static/js/490.433bd1b2.chunk.js","mappings":"yNAEaA,EAAcC,EAAAA,EAAAA,IAAH,mFAMXC,EAAaD,EAAAA,EAAAA,KAAH,kF,kHCAjBE,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,GACG,oBACPC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,EAAAA,GACA,uBACPI,IAAI,EAAG,qDACPF,SAAS,0BAmDd,UAhDc,WACZ,IAAMG,GAAWC,EAAAA,EAAAA,MAKXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbR,MAAO,GACPE,SAAU,IAEZJ,iBAAkBA,EAClBW,SAAU,YAA0B,IAAvBT,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAClBQ,QAAQC,IAAI,CAAEX,MAAAA,EAAOE,SAAAA,IAXA,SAAC,GAAyB,IAAvBF,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SACjCE,GAASQ,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOE,SAAAA,IACzB,CAUGW,CAAiB,CAAEb,MAAAA,EAAOE,SAAAA,GAC3B,IAGH,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAYO,SAAUH,EAAOQ,aAA7B,WACE,SAAC,IAAD,CACEC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOZ,EAAOa,OAAOnB,MACrBoB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQvB,OAASwB,QAAQlB,EAAOmB,OAAOzB,OACrD0B,WAAYpB,EAAOiB,QAAQvB,OAASM,EAAOmB,OAAOzB,SAEpD,SAAC,IAAD,CACEe,GAAG,WACHC,KAAK,WACLC,MAAM,WACNU,KAAK,WACLT,MAAOZ,EAAOa,OAAOjB,SACrBkB,SAAUd,EAAOe,aACjBC,MAAOhB,EAAOiB,QAAQrB,UAAYsB,QAAQlB,EAAOmB,OAAOvB,UACxDwB,WAAYpB,EAAOiB,QAAQrB,UAAYI,EAAOmB,OAAOvB,YAEvD,SAAC,IAAD,CAAQ0B,MAAM,UAAUC,QAAQ,YAAYF,KAAK,SAAjD,wBAMP,C","sources":["components/Wrapper/FormWrapper.styled.js","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FormWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 50px;\n  max-width: 30%;\n`;\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/authSlice/operations';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { FormWrapper, StyledForm } from 'components/Wrapper/FormWrapper.styled';\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const handleFormSubmit = ({ email, password }) => {\n    dispatch(logIn({ email, password }));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ email, password }) => {\n      console.log({ email, password });\n      handleFormSubmit({ email, password });\n    },\n  });\n\n  return (\n    <FormWrapper>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          Submit\n        </Button>\n      </StyledForm>\n    </FormWrapper>\n  );\n};\n\nexport default Login;\n"],"names":["FormWrapper","styled","StyledForm","validationSchema","yup","email","required","password","min","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","console","log","logIn","handleFormSubmit","handleSubmit","id","name","label","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","variant"],"sourceRoot":""}