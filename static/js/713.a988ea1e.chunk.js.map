{"version":3,"file":"static/js/713.a988ea1e.chunk.js","mappings":"wNA0DA,UApDA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MAIjB,OACE,SAAC,KAAD,CACEC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAACC,EAAQC,IAVE,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvCL,GAASS,EAAAA,EAAAA,IAAO,CAAEN,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,IAChC,CASKK,EAAiB,UAAKH,IACtBC,EAAQG,WACT,EATH,UAYE,UAAC,KAAD,YACE,kBAAOC,QAAQ,OAAf,mBACA,SAAC,KAAD,CACEC,KAAK,OACLC,IAAIC,EAAAA,EAAAA,MACJZ,KAAK,OACLa,YAAY,YACZC,MAAM,4IAER,SAAC,KAAD,CAAcd,KAAK,OAAOe,UAAU,UACpC,kBAAON,QAAQ,QAAf,oBACA,SAAC,KAAD,CACEC,KAAK,QACLC,IAAIC,EAAAA,EAAAA,MACJZ,KAAK,QACLa,YAAY,eACZC,MAAM,sBAER,SAAC,KAAD,CAAcd,KAAK,QAAQe,UAAU,UACrC,kBAAON,QAAQ,WAAf,uBACA,SAAC,KAAD,CACEC,KAAK,WACLC,IAAIC,EAAAA,EAAAA,MACJZ,KAAK,WACLa,YAAY,iBACZC,MAAM,wBAER,SAAC,KAAD,CAAcd,KAAK,QAAQe,UAAU,UACrC,SAAC,IAAD,CAAcL,KAAK,SAAnB,yBAIP,C","sources":["pages/SignUp.js"],"sourcesContent":["import { SubmitButton } from 'components/ContactForm/ContactForm.styled';\nimport { ErrorMessage, Field, Form, Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/authSlice/operations';\n\nfunction SignUp() {\n  const dispatch = useDispatch();\n  const handleFormSubmit = ({ name, email, password }) => {\n    dispatch(signUp({ name, email, password }));\n  };\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      onSubmit={(values, actions) => {\n        handleFormSubmit({ ...values });\n        actions.resetForm();\n      }}\n      //   validationSchema={ContactsSchema}\n    >\n      <Form>\n        <label htmlFor=\"name\">Name</label>\n        <Field\n          type=\"text\"\n          id={nanoid()}\n          name=\"name\"\n          placeholder=\"Joe Biden\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        <ErrorMessage name=\"name\" component=\"span\" />\n        <label htmlFor=\"email\">email</label>\n        <Field\n          type=\"email\"\n          id={nanoid()}\n          name=\"email\"\n          placeholder=\"my@email.com\"\n          title=\"type valid email\"\n        />\n        <ErrorMessage name=\"email\" component=\"span\" />\n        <label htmlFor=\"password\">password</label>\n        <Field\n          type=\"password\"\n          id={nanoid()}\n          name=\"password\"\n          placeholder=\"**************\"\n          title=\"type your password\"\n        />\n        <ErrorMessage name=\"email\" component=\"span\" />\n        <SubmitButton type=\"submit\">Sign Up</SubmitButton>\n      </Form>\n    </Formik>\n  );\n}\n\nexport default SignUp;\n"],"names":["dispatch","useDispatch","initialValues","name","email","password","onSubmit","values","actions","signUp","handleFormSubmit","resetForm","htmlFor","type","id","nanoid","placeholder","title","component"],"sourceRoot":""}