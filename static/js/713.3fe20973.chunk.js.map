{"version":3,"file":"static/js/713.3fe20973.chunk.js","mappings":"kOAQMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,mBACPE,IAAI,EAAG,qCACPC,SAAS,oBACZC,MAAOJ,EAAAA,GACG,oBACPI,MAAM,uBACND,SAAS,qBACZE,SAAUL,EAAAA,GACA,uBACPE,IAAI,EAAG,qDACPC,SAAS,0BA0Dd,UAvDA,WACE,IAAMG,GAAWC,EAAAA,EAAAA,MAIXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbT,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZN,iBAAkBA,EAClBY,SAAU,aAVa,SAAC,GAA+B,IAA7BV,EAA4B,EAA5BA,KAAMG,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvCC,GAASM,EAAAA,EAAAA,IAAO,CAAEX,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,IAChC,CASGQ,CAAiB,CAAEZ,KADoB,EAA5BA,KACcG,MADc,EAAtBA,MACeC,SADO,EAAfA,UAEzB,IAEH,OACE,SAAC,IAAD,WACE,UAAC,IAAD,CAAYM,SAAUH,EAAOM,aAA7B,WACE,SAAC,IAAD,CACEC,GAAG,OACHd,KAAK,OACLe,MAAM,OACNC,MAAOT,EAAOU,OAAOjB,KACrBkB,SAAUX,EAAOY,aACjBC,MAAOb,EAAOc,QAAQrB,MAAQsB,QAAQf,EAAOgB,OAAOvB,MACpDwB,WAAYjB,EAAOc,QAAQrB,MAAQO,EAAOgB,OAAOvB,QAEnD,SAAC,IAAD,CACEc,GAAG,QACHd,KAAK,QACLe,MAAM,QACNC,MAAOT,EAAOU,OAAOd,MACrBe,SAAUX,EAAOY,aACjBC,MAAOb,EAAOc,QAAQlB,OAASmB,QAAQf,EAAOgB,OAAOpB,OACrDqB,WAAYjB,EAAOc,QAAQlB,OAASI,EAAOgB,OAAOpB,SAEpD,SAAC,IAAD,CACEW,GAAG,WACHd,KAAK,WACLe,MAAM,WACNU,KAAK,WACLT,MAAOT,EAAOU,OAAOb,SACrBc,SAAUX,EAAOY,aACjBC,MAAOb,EAAOc,QAAQjB,UAAYkB,QAAQf,EAAOgB,OAAOnB,UACxDoB,WAAYjB,EAAOc,QAAQjB,UAAYG,EAAOgB,OAAOnB,YAEvD,SAAC,IAAD,CAAQsB,MAAM,UAAUC,QAAQ,YAAYF,KAAK,SAAjD,yBAMP,C","sources":["pages/SignUp.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/authSlice/operations';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { FormWrapper, StyledForm } from 'components/Wrapper/FormWrapper.styled';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')\n    .min(2, 'Name should be minimum of 2 Chars')\n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n});\n\nfunction SignUp() {\n  const dispatch = useDispatch();\n  const handleFormSubmit = ({ name, email, password }) => {\n    dispatch(signUp({ name, email, password }));\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: ({ name, email, password }) => {\n      handleFormSubmit({ name, email, password });\n    },\n  });\n  return (\n    <FormWrapper>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <TextField\n          id=\"name\"\n          name=\"name\"\n          label=\"Name\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          error={formik.touched.name && Boolean(formik.errors.name)}\n          helperText={formik.touched.name && formik.errors.name}\n        />\n        <TextField\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n        <TextField\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n        <Button color=\"primary\" variant=\"contained\" type=\"submit\">\n          Sign Up\n        </Button>\n      </StyledForm>\n    </FormWrapper>\n  );\n}\n\nexport default SignUp;\n"],"names":["validationSchema","yup","name","min","required","email","password","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","signUp","handleFormSubmit","handleSubmit","id","label","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","variant"],"sourceRoot":""}